- hosts: all
  vars:
    virtualenv: "{{ ansible_env.HOME }}/.virtualenvs/girder"
    nginx_remove_default_vhost: yes
    nginx_vhosts:
      - listen: "80"
        server_name: "girder"
        extra_parameters: |
          location / {
            proxy_set_header Host $proxy_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass http://localhost:8080/;
            # Must set the following for SSE notifications to work
            proxy_buffering off;
            proxy_cache off;
            proxy_set_header Connection '';
            proxy_http_version 1.1;
            chunked_transfer_encoding off;
            proxy_read_timeout 600s;
            proxy_send_timeout 600s;
          }

  tasks:

    - name: Update apt packages
      apt:
        update_cache: true
      become: true
      become_user: root

    - name: Install aptitude on the instance
      apt:
        name: aptitude
      become: true
      become_user: root

    - name: Install python virtualenv
      apt:
        name:
          - python-pip
          - python3-pip
          - python-virtualenv
      become: true
      become_user: root

    - name: Create virtuelenv
      command: virtualenv "{{ virtualenv }}" --python=python2
      args:
        creates: "{{ virtualenv }}"

    - name: Install mongodb
      apt:
        name: mongodb
      become: true
      become_user: root

    - name: Install girder
      include_role:
        name: girder3
      vars:
        girder_virtualenv: "{{ virtualenv }}"
        girder_daemonize: true
        girder_enabled: true

    - name: Install nginx
      include_role:
        name: geerlingguy.nginx
      vars:
        ansible_become: true

    - name: Copy girder configuration file
      copy:
        src: girder.dist.cfg
        dest: "{{ ansible_env.HOME }}/.girder/girder.cfg"

    - name: Restart Girder
      service:
        state: restarted
        name: "{{ item }}"
      with_items:
        - girder
        - nginx
      become: yes
      become_user: root

    - name: Wait for Girder to be available
      wait_for:
        port: 80

    - name: Install Girder-Client
      pip:
        name: "girder-client"
      become: yes
      become_user: root

    - name: Create Girder User
      girder:
        port: 80
        user:
          firstName: "girder"
          lastName: "girder"
          login: "girder"
          password: "girder"
          email: "girder@girder.girder"
          admin: yes
          state: present

    - name: Create filesystem assetstore
      girder:
        username: "girder"
        password: "girder"
        assetstore:
          name: "Filesystem Assetstore"
          type: "filesystem"
          root: "{{ ansible_env.HOME }}/assetstore/"
          current: true
        state: present

    - name: Restart Girder
      service:
        state: restarted
        name: "{{ item }}"
      with_items:
        - girder
        - nginx
      become: true
      become_user: root

    - name: Wait for Girder to be available
      wait_for:
        port: 80
